<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mymagazine.dao.UserMapper">

    <resultMap id="BaseResultMap" type="com.mymagazine.bean.User">
        <id column="uid" jdbcType="INTEGER" property="uid"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="home_url" jdbcType="VARCHAR" property="homeUrl"/>
        <result column="screen_name" jdbcType="VARCHAR" property="screenName"/>
        <result column="created" jdbcType="INTEGER" property="created"/>
        <result column="activated" jdbcType="INTEGER" property="activated"/>
        <result column="logged" jdbcType="INTEGER" property="logged"/>
        <result column="group_name" jdbcType="VARCHAR" property="groupName"/>
    </resultMap>

    <!--  <sql id="Example_Where_Clause">
        <where>
          <foreach collection="oredCriteria" item="criteria" separator="or">
            <if test="criteria.valid">
              <trim prefix="(" prefixOverrides="and" suffix=")">
                <foreach collection="criteria.criteria" item="criterion">
                  <choose>
                    <when test="criterion.noValue">
                      and ${criterion.condition}
                    </when>
                    <when test="criterion.singleValue">
                      and ${criterion.condition} #{criterion.value}
                    </when>
                    <when test="criterion.betweenValue">
                      and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                    </when>
                    <when test="criterion.listValue">
                      and ${criterion.condition}
                      <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                        #{listItem}
                      </foreach>
                    </when>
                  </choose>
                </foreach>
              </trim>
            </if>
          </foreach>
        </where>
      </sql>-->

    <!--<sql id="Update_By_Example_Where_Clause">
      <where>
        <foreach collection="example.oredCriteria" item="criteria" separator="or">
          <if test="criteria.valid">
            <trim prefix="(" prefixOverrides="and" suffix=")">
              <foreach collection="criteria.criteria" item="criterion">
                <choose>
                  <when test="criterion.noValue">
                    and ${criterion.condition}
                  </when>
                  <when test="criterion.singleValue">
                    and ${criterion.condition} #{criterion.value}
                  </when>
                  <when test="criterion.betweenValue">
                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                  </when>
                  <when test="criterion.listValue">
                    and ${criterion.condition}
                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                    </foreach>
                  </when>
                </choose>
              </foreach>
            </trim>
          </if>
        </foreach>
      </where>
    </sql>-->

    <sql id="Base_Column_List">
    uid, username, password, email, home_url, screen_name, created, activated, logged, 
    group_name
  </sql>

    <select id="selectAllUsers" resultMap="BaseResultMap">
      select
      <if test="distinct">
        distinct
      </if>
      <include refid="Base_Column_List" />
      from t_users
    </select>

    <!--<select id="selectByExample" parameterType="com.my.blog.website.model.Vo.UserVoExample" resultMap="BaseResultMap">
      select
      <if test="distinct">
        distinct
      </if>
      <include refid="Base_Column_List" />
      from t_users
      <if test="_parameter != null">
        <include refid="Example_Where_Clause" />
      </if>
      <if test="orderByClause != null">
        order by ${orderByClause}
      </if>
      <if test="limit != null">
        <if test="offset != null">
          limit ${offset}, ${limit}
        </if>
        <if test="offset == null">
          limit ${limit}
        </if>
      </if>
    </select>-->

    <select id="selectUserByUid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_users
        where uid = #{uid,jdbcType=INTEGER}
    </select>

    <select id="checkUserIfExists" resultType="java.lang.Integer" parameterType="java.lang.String">
        select count(*) from t_users
        where username = #{username,jdbcType=VARCHAR}
    </select>

    <select id="selectUserByUserAndPassword" resultType="com.mymagazine.bean.User" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from t_users
        where username = #{username,jdbcType=VARCHAR} and password = #{password,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByUid" parameterType="java.lang.Integer">
    delete from t_users
    where uid = #{uid,jdbcType=INTEGER}
  </delete>

    <!--  <delete id="deleteByExample" parameterType="com.my.blog.website.model.Vo.UserVoExample">
      delete from t_users
      <if test="_parameter != null">
        <include refid="Example_Where_Clause" />
      </if>
    </delete>-->

    <!--<insert id="insertUser" parameterType="com.mymagazine.bean.User" useGeneratedKeys="true" keyProperty="uid">
    insert into t_users (uid, username, password,
      email, home_url, screen_name,
      created, activated, logged,
      group_name)
    values (#{user.uid,jdbcType=INTEGER}, #{user.username,jdbcType=VARCHAR}, #{user.password,jdbcType=VARCHAR},
      #{user.email,jdbcType=VARCHAR}, #{user.homeUrl,jdbcType=VARCHAR}, #{user.screenName,jdbcType=VARCHAR},
      #{user.created,jdbcType=INTEGER}, #{user.activated,jdbcType=INTEGER}, #{user.logged,jdbcType=INTEGER},
      #{user.groupName,jdbcType=VARCHAR})
  </insert>-->

    <insert id="insertUser" parameterType="com.mymagazine.bean.User" useGeneratedKeys="true" keyProperty="uid">
        insert into t_users
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="user.uid != null">
                uid,
            </if>
            <if test="user.username != null">
                username,
            </if>
            <if test="user.password != null">
                password,
            </if>
            <if test="user.email != null">
                email,
            </if>
            <if test="user.homeUrl != null">
                home_url,
            </if>
            <if test="user.screenName != null">
                screen_name,
            </if>
            <if test="user.created != null">
                created,
            </if>
            <if test="user.activated != null">
                activated,
            </if>
            <if test="user.logged != null">
                logged,
            </if>
            <if test="user.groupName != null">
                group_name,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="user.uid != null">
                #{user.uid,jdbcType=INTEGER},
            </if>
            <if test="user.username != null">
                #{user.username,jdbcType=VARCHAR},
            </if>
            <if test="user.password != null">
                #{user.password,jdbcType=VARCHAR},
            </if>
            <if test="user.email != null">
                #{user.email,jdbcType=VARCHAR},
            </if>
            <if test="user.homeUrl != null">
                #{user.homeUrl,jdbcType=VARCHAR},
            </if>
            <if test="user.screenName != null">
                #{user.screenName,jdbcType=VARCHAR},
            </if>
            <if test="user.created != null">
                #{user.created,jdbcType=INTEGER},
            </if>
            <if test="user.activated != null">
                #{user.activated,jdbcType=INTEGER},
            </if>
            <if test="user.logged != null">
                #{user.logged,jdbcType=INTEGER},
            </if>
            <if test="user.groupName != null">
                #{user.groupName,jdbcType=VARCHAR},
            </if>
        </trim>
  </insert>

    <!--<insert id="insertSelective" parameterType="com.my.blog.website.model.Vo.UserVo" useGeneratedKeys="true" keyProperty="uid">
      insert into t_users
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="uid != null">
          uid,
        </if>
        <if test="username != null">
          username,
        </if>
        <if test="password != null">
          password,
        </if>
        <if test="email != null">
          email,
        </if>
        <if test="homeUrl != null">
          home_url,
        </if>
        <if test="screenName != null">
          screen_name,
        </if>
        <if test="created != null">
          created,
        </if>
        <if test="activated != null">
          activated,
        </if>
        <if test="logged != null">
          logged,
        </if>
        <if test="groupName != null">
          group_name,
        </if>
      </trim>
      <trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="uid != null">
          #{uid,jdbcType=INTEGER},
        </if>
        <if test="username != null">
          #{username,jdbcType=VARCHAR},
        </if>
        <if test="password != null">
          #{password,jdbcType=VARCHAR},
        </if>
        <if test="email != null">
          #{email,jdbcType=VARCHAR},
        </if>
        <if test="homeUrl != null">
          #{homeUrl,jdbcType=VARCHAR},
        </if>
        <if test="screenName != null">
          #{screenName,jdbcType=VARCHAR},
        </if>
        <if test="created != null">
          #{created,jdbcType=INTEGER},
        </if>
        <if test="activated != null">
          #{activated,jdbcType=INTEGER},
        </if>
        <if test="logged != null">
          #{logged,jdbcType=INTEGER},
        </if>
        <if test="groupName != null">
          #{groupName,jdbcType=VARCHAR},
        </if>
      </trim>
    </insert>-->

    <select id="count" resultType="java.lang.Long">
        select count(*) from t_users
        <!--<if test="_parameter != null">
          <include refid="Example_Where_Clause" />
        </if>-->
    </select>

    <!--<update id="updateByExampleSelective" parameterType="map">
      update t_users
      <set>
        <if test="record.uid != null">
          uid = #{record.uid,jdbcType=INTEGER},
        </if>
        <if test="record.username != null">
          username = #{record.username,jdbcType=VARCHAR},
        </if>
        <if test="record.password != null">
          password = #{record.password,jdbcType=VARCHAR},
        </if>
        <if test="record.email != null">
          email = #{record.email,jdbcType=VARCHAR},
        </if>
        <if test="record.homeUrl != null">
          home_url = #{record.homeUrl,jdbcType=VARCHAR},
        </if>
        <if test="record.screenName != null">
          screen_name = #{record.screenName,jdbcType=VARCHAR},
        </if>
        <if test="record.created != null">
          created = #{record.created,jdbcType=INTEGER},
        </if>
        <if test="record.activated != null">
          activated = #{record.activated,jdbcType=INTEGER},
        </if>
        <if test="record.logged != null">
          logged = #{record.logged,jdbcType=INTEGER},
        </if>
        <if test="record.groupName != null">
          group_name = #{record.groupName,jdbcType=VARCHAR},
        </if>
      </set>
      <if test="_parameter != null">
        <include refid="Update_By_Example_Where_Clause" />
      </if>
    </update>-->

    <!--  <update id="updateByExample" parameterType="map">
        update t_users
        set uid = #{user.uid,jdbcType=INTEGER},
          username = #{user.username,jdbcType=VARCHAR},
          password = #{user.password,jdbcType=VARCHAR},
          email = #{user.email,jdbcType=VARCHAR},
          home_url = #{user.homeUrl,jdbcType=VARCHAR},
          screen_name = #{user.screenName,jdbcType=VARCHAR},
          created = #{user.created,jdbcType=INTEGER},
          activated = #{user.activated,jdbcType=INTEGER},
          logged = #{user.logged,jdbcType=INTEGER},
          group_name = #{user.groupName,jdbcType=VARCHAR}
        <if test="_parameter != null">
          <include refid="Update_By_Example_Where_Clause" />
        </if>
      </update>-->

    <update id="updateUserByUid" parameterType="com.mymagazine.bean.User">
        update t_users
        <set>
            <if test="user.username != null">
                username = #{user.username,jdbcType=VARCHAR},
            </if>
            <if test="user.password != null">
                password = #{user.password,jdbcType=VARCHAR},
            </if>
            <if test="user.email != null">
                email = #{user.email,jdbcType=VARCHAR},
            </if>
            <if test="user.homeUrl != null">
                home_url = #{user.homeUrl,jdbcType=VARCHAR},
            </if>
            <if test="user.screenName != null">
                screen_name = #{user.screenName,jdbcType=VARCHAR},
            </if>
            <if test="user.created != null">
                created = #{user.created,jdbcType=INTEGER},
            </if>
            <if test="user.activated != null">
                activated = #{user.activated,jdbcType=INTEGER},
            </if>
            <if test="user.logged != null">
                logged = #{user.logged,jdbcType=INTEGER},
            </if>
            <if test="user.groupName != null">
                group_name = #{user.groupName,jdbcType=VARCHAR},
            </if>
        </set>
        where uid = #{user.uid,jdbcType=INTEGER}
    </update>


    <!--<update id="updateByPrimaryKey" parameterType="com.my.blog.website.model.Vo.UserVo">
      update t_users
      set username = #{username,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR},
        home_url = #{homeUrl,jdbcType=VARCHAR},
        screen_name = #{screenName,jdbcType=VARCHAR},
        created = #{created,jdbcType=INTEGER},
        activated = #{activated,jdbcType=INTEGER},
        logged = #{logged,jdbcType=INTEGER},
        group_name = #{groupName,jdbcType=VARCHAR}
      where uid = #{uid,jdbcType=INTEGER}
    </update>-->

</mapper>